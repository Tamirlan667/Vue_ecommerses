{"ast":null,"code":"import IconBase from \"./UI/BaseIcon.vue\";\nimport LikeIcon from \"./icons/LikeIcon.vue\";\nimport CartIcon from \"./icons/CartIcon.vue\";\nimport BaseCard from \"./UI/BaseCard.vue\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport QuantityBlock from \"./UI/QuantityBlock.vue\";\nimport BaseButton from \"./UI/Buttons/BaseButton.vue\";\nimport BaseIconButton from \"./UI/Buttons/BaseIconButton.vue\";\nimport FadeTransition from \"./UI/FadeTransition.vue\";\nexport default {\n  components: {\n    IconBase,\n    LikeIcon,\n    BaseCard,\n    CartIcon,\n    QuantityBlock,\n    BaseButton,\n    BaseIconButton,\n    FadeTransition\n  },\n  props: {\n    image: {\n      type: String,\n      required: true\n    },\n    price: {\n      type: Number,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    rating: {\n      type: Number,\n      required: true\n    },\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      quantity: 1\n    };\n  },\n\n  methods: { ...mapActions([\"setProductsToCart\", \"openModal\", \"handleLikes\"]),\n\n    incrementQuantity() {\n      this.quantity += 1;\n    },\n\n    decrementQuantity() {\n      this.quantity -= 1;\n    },\n\n    handleLikeClick() {\n      this.handleLikes(this.product);\n    },\n\n    handleAddToCartClick() {\n      this.setProductsToCart(this.product);\n    }\n\n  },\n  computed: { ...mapGetters([\"selectedProduct\", \"likedProduct\"]),\n\n    isProductAlreadyInCart() {\n      return this.selectedProduct(this.id) !== undefined;\n    },\n\n    isProductLiked() {\n      return this.likedProduct(this.id) !== undefined;\n    },\n\n    product() {\n      return {\n        id: this.id,\n        title: this.title,\n        price: this.price,\n        image: this.image,\n        quantity: this.quantity,\n        rating: this.rating\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmEA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,MAAvC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,eAAe;EACbC,UAAU,EAAE;IACVV,QADU;IAEVC,QAFU;IAGVE,QAHU;IAIVD,QAJU;IAKVI,aALU;IAMVC,UANU;IAOVC,cAPU;IAQVC;EARU,CADC;EAYbE,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MADD;MAELC,QAAQ,EAAE;IAFL,CADF;IAKLC,KAAK,EAAE;MACLH,IAAI,EAAEI,MADD;MAELF,QAAQ,EAAE;IAFL,CALF;IASLG,KAAK,EAAE;MACLL,IAAI,EAAEC,MADD;MAELC,QAAQ,EAAE;IAFL,CATF;IAaLI,MAAM,EAAE;MACNN,IAAI,EAAEI,MADA;MAENF,QAAQ,EAAE;IAFJ,CAbH;IAiBLK,EAAE,EAAE;MACFP,IAAI,EAAEI,MADJ;MAEFF,QAAQ,EAAE;IAFR;EAjBC,CAZM;;EAmCbM,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IADL,CAAP;EAGD,CAvCY;;EAyCbC,OAAO,EAAE,EACP,GAAGnB,UAAU,CAAC,CAAC,mBAAD,EAAsB,WAAtB,EAAmC,aAAnC,CAAD,CADN;;IAGPoB,iBAAiB,GAAG;MAClB,KAAKF,QAAL,IAAiB,CAAjB;IACD,CALM;;IAOPG,iBAAiB,GAAG;MAClB,KAAKH,QAAL,IAAiB,CAAjB;IACD,CATM;;IAWPI,eAAe,GAAG;MAChB,KAAKC,WAAL,CAAiB,KAAKC,OAAtB;IACD,CAbM;;IAePC,oBAAoB,GAAG;MACrB,KAAKC,iBAAL,CAAuB,KAAKF,OAA5B;IACD;;EAjBM,CAzCI;EA6DbG,QAAQ,EAAE,EACR,GAAG1B,UAAU,CAAC,CAAC,iBAAD,EAAoB,cAApB,CAAD,CADL;;IAGR2B,sBAAsB,GAAG;MACvB,OAAO,KAAKC,eAAL,CAAqB,KAAKb,EAA1B,MAAkCc,SAAzC;IACD,CALO;;IAORC,cAAc,GAAG;MACf,OAAO,KAAKC,YAAL,CAAkB,KAAKhB,EAAvB,MAA+Bc,SAAtC;IACD,CATO;;IAWRN,OAAO,GAAG;MACR,OAAO;QACLR,EAAE,EAAE,KAAKA,EADJ;QAELF,KAAK,EAAE,KAAKA,KAFP;QAGLF,KAAK,EAAE,KAAKA,KAHP;QAILJ,KAAK,EAAE,KAAKA,KAJP;QAKLU,QAAQ,EAAE,KAAKA,QALV;QAMLH,MAAM,EAAE,KAAKA;MANR,CAAP;IAQD;;EApBO;AA7DG,CAAf","names":["IconBase","LikeIcon","CartIcon","BaseCard","mapActions","mapGetters","QuantityBlock","BaseButton","BaseIconButton","FadeTransition","components","props","image","type","String","required","price","Number","title","rating","id","data","quantity","methods","incrementQuantity","decrementQuantity","handleLikeClick","handleLikes","product","handleAddToCartClick","setProductsToCart","computed","isProductAlreadyInCart","selectedProduct","undefined","isProductLiked","likedProduct"],"sourceRoot":"","sources":["/Users/tamirlankarimov/Desktop/Vue_Project_ecommerce/Vue_ecommerce_temp/src/components/Card.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <base-card>\n      <div class=\"card__container\">\n        <div class=\"card__image-container\">\n          <img :src=\"image\" class=\"card__image\" :alt=\"title\" />\n\n          <div class=\"card__like-btn\">\n            <base-icon-button\n              @click=\"handleLikeClick\"\n              variant=\"contained\"\n              iconColor=\"lightgray\"\n              iconHoverColor=\"#ef2525\"\n              iconActiveColor=\"#ef2525\"\n              :isActive=\"isProductLiked\"\n              opacity=\"0.5\"\n            >\n              <like-icon></like-icon>\n            </base-icon-button>\n          </div>\n        </div>\n\n        <h3 class=\"card__title\">{{ title }}</h3>\n\n        <div class=\"card__rating\">\n          <img src=\"../assets/star-icon.svg\" />\n          <p class=\"card__rating-text\">{{ rating }}</p>\n        </div>\n\n        <h3 class=\"card__price\">${{ price }}</h3>\n\n        <form\n          class=\"card__form\"\n          @submit.prevent=\"handleAddToCartClick\"\n          v-if=\"!isProductAlreadyInCart\"\n        >\n          <quantity-block\n            @decrement=\"decrementQuantity\"\n            @increment=\"incrementQuantity\"\n            :quantity=\"quantity\"\n          ></quantity-block>\n          <base-icon-button\n            variant=\"contained\"\n            type=\"submit\"\n            text=\"Add to cart\"\n            iconColor=\"lightgray\"\n            iconHoverColor=\"#ffa801\"\n          >\n            <cart-icon></cart-icon>\n          </base-icon-button>\n        </form>\n\n        <fade-transition>\n          <base-button\n            @click=\"openModal\"\n            variant=\"contained\"\n            mode=\"success\"\n            v-if=\"isProductAlreadyInCart\"\n            >Already is in your Cart</base-button\n          >\n        </fade-transition>\n      </div>\n    </base-card>\n  </div>\n</template>\n\n<script>\nimport IconBase from \"./UI/BaseIcon.vue\";\nimport LikeIcon from \"./icons/LikeIcon.vue\";\nimport CartIcon from \"./icons/CartIcon.vue\";\nimport BaseCard from \"./UI/BaseCard.vue\";\nimport { mapActions, mapGetters } from \"vuex\";\nimport QuantityBlock from \"./UI/QuantityBlock.vue\";\nimport BaseButton from \"./UI/Buttons/BaseButton.vue\";\nimport BaseIconButton from \"./UI/Buttons/BaseIconButton.vue\";\nimport FadeTransition from \"./UI/FadeTransition.vue\";\nexport default {\n  components: {\n    IconBase,\n    LikeIcon,\n    BaseCard,\n    CartIcon,\n    QuantityBlock,\n    BaseButton,\n    BaseIconButton,\n    FadeTransition,\n  },\n\n  props: {\n    image: {\n      type: String,\n      required: true,\n    },\n    price: {\n      type: Number,\n      required: true,\n    },\n    title: {\n      type: String,\n      required: true,\n    },\n    rating: {\n      type: Number,\n      required: true,\n    },\n    id: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      quantity: 1,\n    };\n  },\n\n  methods: {\n    ...mapActions([\"setProductsToCart\", \"openModal\", \"handleLikes\"]),\n\n    incrementQuantity() {\n      this.quantity += 1;\n    },\n\n    decrementQuantity() {\n      this.quantity -= 1;\n    },\n\n    handleLikeClick() {\n      this.handleLikes(this.product);\n    },\n\n    handleAddToCartClick() {\n      this.setProductsToCart(this.product);\n    },\n  },\n\n  computed: {\n    ...mapGetters([\"selectedProduct\", \"likedProduct\"]),\n\n    isProductAlreadyInCart() {\n      return this.selectedProduct(this.id) !== undefined;\n    },\n\n    isProductLiked() {\n      return this.likedProduct(this.id) !== undefined;\n    },\n\n    product() {\n      return {\n        id: this.id,\n        title: this.title,\n        price: this.price,\n        image: this.image,\n        quantity: this.quantity,\n        rating: this.rating,\n      };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card__container {\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.card__image-container {\n  align-self: center;\n  position: relative;\n  width: 270px;\n}\n\n.card__image {\n  display: block;\n  width: 100%;\n  height: 235px;\n  object-fit: contain;\n}\n\n.card__title {\n  min-height: 43px;\n}\n\n.card__like-btn {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n}\n\n.card__rating {\n  display: flex;\n  gap: 5px;\n  align-items: baseline;\n}\n\n.card__rating-text {\n  font-weight: 600;\n  font-size: 13px;\n  line-height: 18px;\n}\n\n.card__price {\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 30px;\n}\n\n.card__form {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  gap: 47px;\n}\n\n@media screen and (min-width: 768px) {\n  .card:hover {\n    box-shadow: 0px 21px 44px rgba(0, 0, 0, 0.08);\n    border-radius: 12px;\n  }\n\n  .card__title:hover {\n    transition: color 0.1s linear;\n    color: #ffa801;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}